# Generated by Django 2.1.7 on 2019-05-11 22:25

import agent.models
from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', agent.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AgentManager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=50, verbose_name='Телефон')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Имя')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='Адрес')),
                ('phone_number', models.CharField(max_length=50, verbose_name='Телефон')),
                ('email', models.CharField(blank=True, max_length=255, verbose_name='Email')),
            ],
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=50, verbose_name='Телефон')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Realty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('square', models.IntegerField(blank=True, null=True, verbose_name='Площадь')),
                ('land', models.IntegerField(blank=True, null=True, verbose_name='Земля')),
                ('floor', models.IntegerField(blank=True, null=True, verbose_name='Этаж')),
                ('rooms', models.IntegerField(blank=True, null=True, verbose_name='Кол-во комнат')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес')),
                ('client_price', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Стоимость')),
                ('description', models.TextField(blank=True, max_length=10000, null=True, verbose_name='Описание')),
            ],
        ),
        migrations.CreateModel(
            name='RealtyType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Тип недвижимости')),
            ],
        ),
        migrations.CreateModel(
            name='Requests',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_from', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата открытия заявки')),
                ('date_to', models.DateTimeField(blank=True, null=True, verbose_name='Дата закртытия заявки')),
                ('closed', models.BooleanField(blank=True, default=0, verbose_name='Заявка закрыта')),
                ('client_buy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='client_buy', to='agent.Client', verbose_name='Клиент-покупатель')),
                ('client_sell', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='client_sell', to='agent.Client', verbose_name='Клиент(создал заявку)')),
                ('realty', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='agent.Realty', verbose_name='Недвижимость')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Услуга')),
                ('price', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Стоимость')),
            ],
        ),
        migrations.AddField(
            model_name='requests',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agent.Service', verbose_name='Услуга'),
        ),
        migrations.AddField(
            model_name='requests',
            name='worker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agent.Manager', verbose_name='Сотрудник'),
        ),
        migrations.AddField(
            model_name='realty',
            name='realty_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='agent.RealtyType', verbose_name='Тип недвижимости'),
        ),
    ]
